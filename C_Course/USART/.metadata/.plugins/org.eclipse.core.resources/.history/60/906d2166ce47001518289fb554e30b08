#include "./MCU/LED.h"

// ----- LED definitions ------------------------------------------------------

// Adjust these definitions for your own board.

// STM32F0DISCOVERY definitions (GREEN led, C9, active high)
// (SEGGER J-Link device name: STM32F051R8).

// Port numbers: 0=A, 1=B, 2=C, 3=D, 4=E, 5=F, 6=G, ...
#define BLINK_PORT_NUMBER               (0)
#define BLINK_PIN_NUMBER                (5)
#define BLINK_ACTIVE_LOW                (1)

#define BLINK_GPIOx(_N)                 ((GPIO_TypeDef *)(GPIOA_BASE + (GPIOB_BASE-GPIOA_BASE)*(_N)))
#define BLINK_PIN_MASK(_N)              (1 << (_N))
#define BLINK_RCC_MASKx(_N)             (RCC_AHBPeriph_GPIOA << (_N))

void LED_On(void)
{
	//GPIO_SetBits(BLINK_GPIOx(BLINK_PORT_NUMBER),BLINK_PIN_MASK(BLINK_PIN_NUMBER));
	GPIOA->BSRR |= (0x00000001 << BLINK_PIN_NUMBER);
}

void LED_Off(void)
{
	GPIO_ResetBits(BLINK_GPIOx(BLINK_PORT_NUMBER),BLINK_PIN_MASK(BLINK_PIN_NUMBER));

	GPIOA->BRR != (0x00000001 << BLINK_PIN_NUMBER);

	/*GPIOA->MODER |= (0x01<<10); // the pin as output
	GPIOA->OTYPER &= ~(1<<5); 	// set it to push-pull
	GPIOA->OSPEEDR &= ~(0x02<<10);
	GPIOA->PUPDR &= ~(0x02<<10);*/
}

void LED_Init(void)
{
	// Enable GPIO Peripheral clock
	RCC_AHBPeriphClockCmd(BLINK_RCC_MASKx(BLINK_PORT_NUMBER), ENABLE);

	GPIO_InitTypeDef GPIO_InitStructure;

	// Configure pin in output push/pull mode
	GPIO_InitStructure.GPIO_Pin = BLINK_PIN_MASK(BLINK_PIN_NUMBER);
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(BLINK_GPIOx(BLINK_PORT_NUMBER), &GPIO_InitStructure);
	LED_Off();
}
